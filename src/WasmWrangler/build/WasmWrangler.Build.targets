<Project>
  <Target Name="WasmBuild" AfterTargets="AfterBuild" DependsOnTargets="
    WasmInjectScripts;
    CalculateWasmOutputPath;
    WasmCopyRuntime;
    WasmPackageAssembly;
    WasmWriteBootstrapper;
    WasmCopyAssets" />
  
  <Target Name="WasmCopyRuntime">
    <MakeDir Directories="$(WasmOutputPath)" />
  
    <PropertyGroup>
      <_WasmRuntimeDir>$(WasmSDKPath)/builds</_WasmRuntimeDir>
    
      <_WasmRuntimeDir Condition="'$(Configuration)' == 'Debug'">$(_WasmRuntimeDir)/debug</_WasmRuntimeDir>
      <_WasmRuntimeDir Condition="'$(Configuration)' != 'Debug'">$(_WasmRuntimeDir)/release</_WasmRuntimeDir>
    </PropertyGroup>
  
    <Copy
      SourceFiles="$(_WasmRuntimeDir)/dotnet.js;$(_WasmRuntimeDir)/dotnet.wasm"
      DestinationFolder="$(WasmOutputPath)" />
  </Target>

  <Target Name="WasmCalculateFilesToPackage">
    <ItemGroup>
      <WasmFilesToPackage Include="$(OutputPath)/**/*.dll;$(OutputPath)/**/*.pdb" Exclude="$(WasmOutputPath)/**/*" />

      <WasmFilesToPackage Update="*">
        <WasmOutputPath>$(WasmOutputPath)/managed/%(WasmFilesToPackage.RecursiveDir)%(WasmFilesToPackage.Filename)%(WasmFilesToPackage.Extension)</WasmOutputPath>
      </WasmFilesToPackage>
    </ItemGroup>
  </Target>
  
  <Target Name="WasmPackageAssembly">
    <MakeDir Directories="$(WasmOutputPath)/managed" />

    <PropertyGroup>
      <!-- sdkPath -->
      <_WasmPackageAssemblyArgs>&quot;$(WasmSDKPath)&quot;</_WasmPackageAssemblyArgs>
      <!-- assemblyPath -->
      <_WasmPackageAssemblyArgs>$(_WasmPackageAssemblyArgs) &quot;$(OutputPath)$(AssemblyName).dll&quot;</_WasmPackageAssemblyArgs>
      <!-- outputDirectory -->
      <_WasmPackageAssemblyArgs>$(_WasmPackageAssemblyArgs) &quot;$(WasmOutputPath)/managed&quot;</_WasmPackageAssemblyArgs>
      <!-- debug -->
      <_WasmPackageAssemblyArgs Condition="'$(Configuration)' == 'Debug'">$(_WasmPackageAssemblyArgs) true</_WasmPackageAssemblyArgs>
      <_WasmPackageAssemblyArgs Condition="'$(Configuration)' != 'Debug'">$(_WasmPackageAssemblyArgs) false</_WasmPackageAssemblyArgs>
    </PropertyGroup>

    <Message Importance="high" Text="WasmPackageAssemblyArgs = $(_WasmPackageAssemblyArgs)" />
    
    <Exec
      Command="$(WasmWranglerBuildCommand) PackageAssembly $(_WasmPackageAssemblyArgs)" />
  </Target>

  <Target Name="WasmWriteBootstrapper">
    <PropertyGroup>
      <WasmEntryAssembly Condition="'$(WasmEntryAssembly)' == ''">$(AssemblyName)</WasmEntryAssembly>
      <WasmMainEntryPoint Condition="'$(WasmMainEntryPoint)' == ''">$(AssemblyName).Program:Main</WasmMainEntryPoint>
    </PropertyGroup>

    <Message Importance="high" Text="WasmEntryAssembly = $(WasmEntryAssembly)" />
    <Message Importance="high" Text="WasmMainEntryPoint = $(WasmMainEntryPoint)" />

    <PropertyGroup>
      <_WasmAppInitSource>
<![CDATA[var Module={onRuntimeInitialized:function(){
  MONO.mono_load_runtime_and_bcl (
    config.vfs_prefix,
    config.deploy_prefix,
    config.enable_debugging,
    config.file_list,
    function() { BINDING.call_static_method("[$(WasmEntryAssembly)] $(WasmMainEntryPoint)")%3B },
    function(asset) {
      console.info("Fetching " + asset)%3B
      return fetch (asset, { credentials: 'same-origin' })%3B
    }
   )%3B
}}%3B]]>
      </_WasmAppInitSource>
    </PropertyGroup>

    <ItemGroup>
      <_WasmBootstrapperJsFiles Include="
        $(WasmOutputPath)/managed/package.js;
        $(WasmOutputPath)/dotnet.js" />
    </ItemGroup>

    <!-- NOTE: Codition is required for incremental builds. -->
    <ItemGroup Condition="Exists('$(WasmOutputPath)/dotnet.js')">
      <_WasmBootstrapperJsFilesContents Include="$([System.IO.File]::ReadAllText(&quot;%(_WasmBootstrapperJsFiles.Identity)&quot;))" />
    </ItemGroup>

    <WriteLinesToFile File="$(WasmOutputPath)/wasm.bootstrapper.js" Lines="$(_WasmAppInitSource);@(_WasmBootstrapperJsFilesContents)" Overwrite="true" />

    <Delete Files="@(_WasmBootstrapperJsFiles)" />

    <Exec
      Command="$(WasmWranglerBuildCommand) MinifyJs &quot;$(WasmOutputPath)/wasm.bootstrapper.js&quot; &quot;$(WasmOutputPath)/wasm.bootstrapper.js&quot;" />
  </Target>
  
  <Target Name="WasmCopyAssets">
    <ItemGroup>
      <_WasmDistFiles Include="$(WasmOutputPath)/**/*" />
      <WasmFilesToCopy Include="$(OutputPath)/**/*" Exclude="@(WasmFilesToPackage);@(_WasmDistFiles)" />

      <WasmFilesToCopy Update="*">
        <Source>%(WasmFilesToCopy.Identity)</Source>
        <Destination>$(WasmOutputPath)/%(WasmFilesToCopy.RecursiveDir)%(WasmFilesToCopy.Filename)%(WasmFilesToCopy.Extension)</Destination>
      </WasmFilesToCopy>
    </ItemGroup>

    <Message Importance="high" Text="@(WasmFilesToCopy->'%(Source) => %(Destination)', '%0A')" />
        
    <Copy
        SourceFiles="%(WasmFilesToCopy.Source)"
        DestinationFiles="%(WasmFilesToCopy.Destination)"
        SkipUnchangedFiles="true" />
  </Target>
</Project>
