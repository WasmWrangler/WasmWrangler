<Project>
  <Target Name="WasmBuild" AfterTargets="AfterBuild" DependsOnTargets="
    CalculateWasmOutputPath;
    WasmCopyRuntime;
    WasmPackageAssembly;
    WasmWriteJs;
    WasmCopyAssets" />
  
  <Target Name="WasmCopyRuntime">
    <MakeDir Directories="$(WasmOutputPath)" />
  
    <PropertyGroup>
      <_WasmRuntimeDir>$(WasmSDKPath)/builds</_WasmRuntimeDir>
    
      <_WasmRuntimeDir Condition="'$(Configuration)' == 'Debug'">$(_WasmRuntimeDir)/debug</_WasmRuntimeDir>
      <_WasmRuntimeDir Condition="'$(Configuration)' != 'Debug'">$(_WasmRuntimeDir)/release</_WasmRuntimeDir>
    </PropertyGroup>
  
    <Copy
      SourceFiles="$(_WasmRuntimeDir)/dotnet.js;$(_WasmRuntimeDir)/dotnet.wasm"
      DestinationFolder="$(WasmOutputPath)" />
  </Target>

  <Target Name="WasmCalculateFilesToPackage">
    <ItemGroup>
      <WasmFilesToPackage Include="$(OutputPath)/**/*.dll;$(OutputPath)/**/*.pdb" Exclude="$(WasmOutputPath)/**/*" />

      <WasmFilesToPackage Update="*">
        <WasmOutputPath>$(WasmOutputPath)/managed/%(WasmFilesToPackage.RecursiveDir)%(WasmFilesToPackage.Filename)%(WasmFilesToPackage.Extension)</WasmOutputPath>
      </WasmFilesToPackage>
    </ItemGroup>
  </Target>
  
  <Target Name="WasmPackageAssembly">
    <MakeDir Directories="$(WasmOutputPath)/managed" />

    <PropertyGroup>
      <!-- sdkPath -->
      <_WasmPackageAssemblyArgs>&quot;$(WasmSDKPath)&quot;</_WasmPackageAssemblyArgs>
      <!-- assemblyPath -->
      <_WasmPackageAssemblyArgs>$(_WasmPackageAssemblyArgs) &quot;$(OutputPath)$(AssemblyName).dll&quot;</_WasmPackageAssemblyArgs>
      <!-- outputDirectory -->
      <_WasmPackageAssemblyArgs>$(_WasmPackageAssemblyArgs) &quot;$(WasmOutputPath)/managed&quot;</_WasmPackageAssemblyArgs>
      <!-- debug -->
      <_WasmPackageAssemblyArgs Condition="'$(Configuration)' == 'Debug'">$(_WasmPackageAssemblyArgs) true</_WasmPackageAssemblyArgs>
      <_WasmPackageAssemblyArgs Condition="'$(Configuration)' != 'Debug'">$(_WasmPackageAssemblyArgs) false</_WasmPackageAssemblyArgs>
    </PropertyGroup>

    <Message Importance="high" Text="WasmPackageAssemblyArgs = $(_WasmPackageAssemblyArgs)" />
    
    <Exec
      Command="$(WasmWranglerBuildCommand) PackageAssembly $(_WasmPackageAssemblyArgs)" />
  </Target>

  <Target Name="WasmWriteJs">
    <Exec
      Command="$(WasmWranglerBuildCommand) UpdateDotnetJs &quot;$(WasmOutputPath)/dotnet.js&quot;" />

    <PropertyGroup>
      <_WasmWranglerJs>
        $([System.IO.File]::ReadAllText(&quot;$(MSBuildThisFileDirectory)/js/WasmWrangler.js&quot;))
        $([System.IO.File]::ReadAllText(&quot;$(WasmOutputPath)/managed/package.js&quot;))
        $([System.IO.File]::ReadAllText(&quot;$(WasmOutputPath)/dotnet.js&quot;))
      </_WasmWranglerJs>
    </PropertyGroup>
    
    <WriteLinesToFile
      File="$(WasmOutputPath)/wasmwrangler.js"
      Lines="$(_WasmWranglerJs)"
      Overwrite="true" />

    <!-- Cleanup the js files we folded in. -->
    <Delete Files="
      $(WasmOutputPath)/managed/package.js;
      $(WasmOutputPath)/dotnet.js" />

    <Exec
      Condition="'$(Configuration)' != 'Debug'"
      Command="$(WasmWranglerBuildCommand) MinifyJs &quot;$(WasmOutputPath)/wasmwrangler.js&quot; &quot;$(WasmOutputPath)/wasmwrangler.js&quot;" />
  </Target>
  
  <Target Name="WasmCopyAssets">
    <ItemGroup>
      <_WasmDistFiles Include="$(WasmOutputPath)/**/*" />
      <WasmFilesToCopy Include="$(OutputPath)/**/*" Exclude="@(WasmFilesToPackage);@(_WasmDistFiles)" />

      <WasmFilesToCopy Update="*">
        <Source>%(WasmFilesToCopy.Identity)</Source>
        <Destination>$(WasmOutputPath)/%(WasmFilesToCopy.RecursiveDir)%(WasmFilesToCopy.Filename)%(WasmFilesToCopy.Extension)</Destination>
      </WasmFilesToCopy>
    </ItemGroup>

    <Message Importance="high" Text="@(WasmFilesToCopy->'%(Source) => %(Destination)', '%0A')" />
        
    <Copy
        SourceFiles="%(WasmFilesToCopy.Source)"
        DestinationFiles="%(WasmFilesToCopy.Destination)"
        SkipUnchangedFiles="true" />
  </Target>
</Project>
