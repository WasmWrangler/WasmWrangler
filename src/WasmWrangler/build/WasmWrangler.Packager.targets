<Project>
  <Target Name="WasmCalculateFilesToPackage">
    <ItemGroup>
      <WasmFilesToPackage Include="$(OutputPath)/**/*.dll;$(OutputPath)/**/*.pdb" Exclude="$(WasmOutputPath)/**/*" />

      <WasmFilesToPackage Update="*">
        <WasmOutputPath>$(WasmOutputPath)/managed/%(WasmFilesToPackage.RecursiveDir)%(WasmFilesToPackage.Filename)%(WasmFilesToPackage.Extension)</WasmOutputPath>
      </WasmFilesToPackage>
    </ItemGroup>
  </Target>

  <Target Name="WasmCalculateAppInitSource">
    <PropertyGroup>
      <WasmEntryAssembly Condition="'$(WasmEntryAssembly)' == ''">$(AssemblyName)</WasmEntryAssembly>
      <WasmMainEntryPoint Condition="'$(WasmMainEntryPoint)' == ''">$(AssemblyName).Program:Main</WasmMainEntryPoint>
    </PropertyGroup>

    <Message Importance="high" Text="WasmEntryAssembly = $(WasmEntryAssembly)" />
    <Message Importance="high" Text="WasmMainEntryPoint = $(WasmMainEntryPoint)" />

    <PropertyGroup>
      <_WasmAppInitSource>
        <![CDATA[var App={init:function(){BINDING.call_static_method("[$(WasmEntryAssembly)] $(WasmMainEntryPoint)")%3B}};]]>
      </_WasmAppInitSource>
    </PropertyGroup>
  </Target>

  <Target Name="WasmCallSDKPackager" DependsOnTargets="
    WasmEnsureSDKAvailable;
    WasmCalculateFilesToPackage;
    WasmCalculateAppInitSource"
    Inputs="@(WasmFilesToPackage)"
    Outputs="@(WasmFilesToPackage->'%(WasmOutputPath)')">
    <PropertyGroup>
      <_WasmPackagerArgs Condition="'$(Configuration)' == 'Debug'">--debug</_WasmPackagerArgs>
      <!-- prefix tells packager.exe where to look for referenced assemblies -->
      <_WasmPackagerArgs>$(_WasmPackagerArgs) --prefix=&quot;$(OutputPath) &quot;</_WasmPackagerArgs>
      <!-- Not sure what appdir does but it's required -->
      <_WasmPackagerArgs>$(_WasmPackagerArgs) --appdir=&quot;$(OutputPath) &quot;</_WasmPackagerArgs>
      <!-- Where to put the output -->
      <_WasmPackagerArgs>$(_WasmPackagerArgs) --out=&quot;$(WasmOutputPath) &quot;</_WasmPackagerArgs>
      <!-- The entry assembly -->
      <_WasmPackagerArgs>$(_WasmPackagerArgs) &quot;$(OutputPath)$(AssemblyName).dll&quot;</_WasmPackagerArgs>
    </PropertyGroup>

    <MakeDir Directories="$(WasmOutputPath);$(WasmOutputPath)/managed" />

    <Copy SourceFiles="@(WasmFilesToPackage)" DestinationFolder="$(WasmOutputPath)/managed" />
    
    <!--<Message Importance="high" Text="WasmPackagerArgs = $(_WasmPackagerArgs)" />

    <Exec Command="$(WasmSDKPath)/packager.exe $(_WasmPackagerArgs)" />

    <ItemGroup>
      <_WasmBootstrapperJsFiles Include="
        $(WasmOutputPath)/mono-config.js;
        $(WasmOutputPath)/runtime.js;
        $(WasmOutputPath)/dotnet.js" />
    </ItemGroup>

    --><!-- NOTE: Codition is required for incremental builds. --><!--
    <ItemGroup Condition="Exists('$(WasmOutputPath)/mono-config.js')">
      <_WasmBootstrapperJsFilesContents Include="$([System.IO.File]::ReadAllText(&quot;%(_WasmBootstrapperJsFiles.Identity)&quot;))" />
    </ItemGroup>

    <WriteLinesToFile File="$(WasmOutputPath)/wasm.bootstrapper.js" Lines="$(_WasmAppInitSource);@(_WasmBootstrapperJsFilesContents)" Overwrite="true" />

    <Delete Files="@(_WasmBootstrapperJsFiles)" />-->
  </Target>
</Project>
