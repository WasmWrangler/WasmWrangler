<Project>
  <PropertyGroup>
    <!-- Allows the samples to specify where the WasmWrangler assembly is located. -->
    <WasmWranglerAssemblyFile Condition="'$(WasmWranglerAssemblyFile)' == ''">$(MSBuildThisFileDirectory)../../lib/netstandard2.0/WasmWrangler.dll</WasmWranglerAssemblyFile>
  </PropertyGroup>
  
  <UsingTask TaskName="WasmWrangler.DownloadMonoWasmSDK" AssemblyFile="$(WasmWranglerAssemblyFile)" />

  <Target Name="WasmEnsureSDKAvailable">
    <Message Importance="high" Text="WasmSDKUrl = $(WasmSDKUrl)" />
    <Message Importance="high" Text="WasmSDKName = $(WasmSDKName)" />
    <Message Importance="high" Text="WasmSDKPath = $(WasmSDKPath)" />

    <Message
      Condition="Exists('$(WasmSDKPath)')"
      Importance="high"
      Text="Wasm SDK already available." />

    <DownloadMonoWasmSDK
      Condition="!Exists('$(WasmSDKPath)')"
      SDKUrl="$(WasmSDKUrl)"
      SDKName="$(WasmSDKName)"
      SDKPath="$(WasmSDKPath)" />
  </Target>

  <Target Name="WasmRestore" AfterTargets="Restore" DependsOnTargets="WasmEnsureSDKAvailable" />

  <Target Name="WasmBuild" AfterTargets="AfterBuild" DependsOnTargets="
    WasmEnsureSDKAvailable;
    WasmCallSDKPackager;
    WasmCreateBootstraperJs;
    WasmCopyAssets" />

  <Target Name="WasmCallSDKPackager">
    <PropertyGroup>
      <WasmOutputPath Condition="'$(WasmOutputPath)' == ''">$(OutputPath)/dist</WasmOutputPath>
      <_WasmPackagerInputPath>$(OutputPath)$(AssemblyName).dll</_WasmPackagerInputPath>
    </PropertyGroup>

    <Exec Command="$(WasmSDKPath)/packager.exe --out=&quot;$(WasmOutputPath)&quot; &quot;$(_WasmPackagerInputPath)&quot;" />
  </Target>

  <Target Name="WasmCreateBootstraperJs">
    <ItemGroup>
      <_WasmBootstrapperJsFiles Include="
        $(WasmOutputPath)/mono-config.js;
        $(WasmOutputPath)/runtime.js;
        $(WasmOutputPath)/dotnet.js" />
    </ItemGroup>

    <ItemGroup>
      <_WasmBootstrapperJsFilesContents Include="$([System.IO.File]::ReadAllText(%(_WasmBootstrapperJsFiles.Identity)))"/>
    </ItemGroup>

    <WriteLinesToFile File="$(WasmOutputPath)/bootstrapper.js" Lines="@(_WasmBootstrapperJsFilesContents)" Overwrite="true" />

    <Delete Files="@(_WasmBootstrapperJsFiles)" />
  </Target>

  <Target Name="WasmCopyAssets">
    <ItemGroup>
      <_WasmAssestsPreserveNewest Include="@(None)" Condition="'%(None.CopyToOutputDirectory)' == 'PreserveNewest'" />
    </ItemGroup>

    <Copy
        SourceFiles="%(_WasmAssestsPreserveNewest.Identity)"
        DestinationFiles="$(WasmOutputPath)/%(_WasmAssestsPreserveNewest.RecursiveDir)%(_WasmAssestsPreserveNewest.FileName)%(_WasmAssestsPreserveNewest.Extension)"
        SkipUnchangedFiles="true" />

    <ItemGroup>
      <_WasmAssestsAlways Include="@(None)" Condition="'%(None.CopyToOutputDirectory)' == 'Always'" />
    </ItemGroup>

    <Copy
        SourceFiles="%(_WasmAssestsAlways.Identity)"
        DestinationFiles="$(WasmOutputPath)/%(_WasmAssestsAlways.RecursiveDir)%(_WasmAssestsAlways.FileName)%(_WasmAssestsAlways.Extension)"
        SkipUnchangedFiles="false" />
  </Target>
</Project>
